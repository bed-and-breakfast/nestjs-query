"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[1078],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,g=p["".concat(i,".").concat(m)]||p[m]||c[m]||l;return t?a.createElement(g,o(o({ref:n},d),{},{components:t})):a.createElement(g,o({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3314:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),r=t(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:t},n)}},1291:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(7462),r=t(7294),l=t(6010),o=t(2389),s=t(7392),i=t(7094),u=t(2466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){var n,t,o=e.lazy,p=e.block,c=e.defaultValue,m=e.values,g=e.groupId,f=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),y=(0,s.l)(b,(function(e,n){return e.value===n.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===c?c:null!=(n=null!=c?c:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:h[0].props.value;if(null!==v&&!b.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,i.U)(),k=T.tabGroupChoices,N=T.setTabGroupChoices,j=(0,r.useState)(v),Z=j[0],I=j[1],C=[],q=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var O=k[g];null!=O&&O!==Z&&b.some((function(e){return e.value===O}))&&I(O)}var x=function(e){var n=e.currentTarget,t=C.indexOf(n),a=b[t].value;a!==Z&&(q(n),I(a),null!=g&&N(g,String(a)))},X=function(e){var n,t=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":var a,r=C.indexOf(e.currentTarget)+1;t=null!=(a=C[r])?a:C[0];break;case"ArrowLeft":var l,o=C.indexOf(e.currentTarget)-1;t=null!=(l=C[o])?l:C[C.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",d.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},f)},b.map((function(e){var n=e.value,t=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:Z===n?0:-1,"aria-selected":Z===n,key:n,ref:function(e){return C.push(e)},onKeyDown:X,onClick:x},o,{className:(0,l.Z)("tabs__item",d.tabItem,null==o?void 0:o.className,{"tabs__item--active":Z===n})}),null!=t?t:n)}))),o?(0,r.cloneElement)(h.filter((function(e){return e.props.value===Z}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==Z})}))))}function c(e){var n=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},4265:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>u,metadata:()=>p,toc:()=>m});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),o=t(1291),s=t(3314),i=["components"],u={title:"Queries"},d=void 0,p={unversionedId:"graphql/queries",id:"graphql/queries",title:"Queries",description:"The CRUDResolver automatically exposes two query endpoints. The endpoints names will be derived from",source:"@site/docs/graphql/queries.mdx",sourceDirName:"graphql",slug:"/graphql/queries",permalink:"/nestjs-query/docs/graphql/queries",draft:!1,editUrl:"https://github.com/tripss/nestjs-query/edit/master/documentation/docs/graphql/queries.mdx",tags:[],version:"current",frontMatter:{title:"Queries"},sidebar:"docs",previous:{title:"Resolvers",permalink:"/nestjs-query/docs/graphql/resolvers"},next:{title:"Mutations",permalink:"/nestjs-query/docs/graphql/mutations"}},c={},m=[{value:"Find By Id",id:"find-by-id",level:2},{value:"Querying",id:"querying",level:2},{value:"Filtering",id:"filtering",level:3},{value:"Sorting",id:"sorting",level:3}],g={toc:m},f="wrapper";function h(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)(f,(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/resolvers"},"CRUDResolver")," automatically exposes two query endpoints. The endpoints names will be derived from\nname provided to ",(0,l.kt)("inlineCode",{parentName:"p"},"@ObjectType")," or the class name."),(0,l.kt)("p",null,"The following examples are based on the following ",(0,l.kt)("inlineCode",{parentName:"p"},"TodoItemDTO")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'},"import { FilterableField } from '@ptc-org/nestjs-query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @IDField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),(0,l.kt)("p",null,"In the following examples you will see two endpoints referenced"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"todoItem")," - graphql endpoint to find a record by id."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"todoItems")," - graphql endpoint to filter, page, and sort records,")),(0,l.kt)("h2",{id:"find-by-id"},"Find By Id"),(0,l.kt)("p",null,"The following example finds a ",(0,l.kt)("inlineCode",{parentName:"p"},"TodoItem")," by id."),(0,l.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"graphql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  todoItem(id: "1") {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n'))),(0,l.kt)(s.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": false,\n      "created": "2020-01-14T07:00:31.763Z",\n      "updated": "2020-01-14T07:00:31.763Z"\n    }\n  }\n}\n')))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"querying"},"Querying"),(0,l.kt)("p",null,"As described above the ",(0,l.kt)("inlineCode",{parentName:"p"},"CRUDResolver")," will expose a query method called ",(0,l.kt)("inlineCode",{parentName:"p"},"todoItems"),". The result will be either\na ",(0,l.kt)("a",{parentName:"p",href:"https://relay.dev/graphql/connections.htm"},(0,l.kt)("inlineCode",{parentName:"a"},"connection"))," or array depending on the ",(0,l.kt)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/paging"},"paging strategy you choose")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"All examples below assume that a connection is returned but filtering and sorting work the same way for all paging\nstrategies. To read how to page collections read the ",(0,l.kt)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/paging"},"paging docs"))),(0,l.kt)("p",null,"By default if you do not provided an arguments you can query for all records."),(0,l.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"graphql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems{\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges{\n      node{\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),(0,l.kt)(s.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjI="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-01T00:43:16.000Z",\n            "updated": "2020-01-01T00:43:16.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"filtering"},"Filtering"),(0,l.kt)("p",null,"Filtering in ",(0,l.kt)("inlineCode",{parentName:"p"},"query-graphql")," has has an object based syntax"),(0,l.kt)("p",null,"For a full reference of filter operations ",(0,l.kt)("a",{parentName:"p",href:"/nestjs-query/docs/concepts/queries#filter-reference"},"see filter reference")),(0,l.kt)("p",null,"The following example filters for all todoItems that are marked completed."),(0,l.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"graphql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(filter: {completed: {is: true}}){\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges{\n      node{\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),(0,l.kt)(s.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjE="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("h3",{id:"sorting"},"Sorting"),(0,l.kt)("p",null,"You can sort by one or more fields by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"sorting")," parameter."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"sorting")," parameter is an array where each item has the following options."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"field!")," - The name of the field to sort by."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"direction!")," - The direction to sort either ",(0,l.kt)("inlineCode",{parentName:"li"},"ASC")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"DESC"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nulls?")," - Optional field to set nulls sort order ",(0,l.kt)("inlineCode",{parentName:"li"},"NULLS_FIRST")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"NULLS_last"))),(0,l.kt)("p",null,"In this example we sort by title descending."),(0,l.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"graphql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(sorting: [{ field: title, direction: DESC }]) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n\n"))),(0,l.kt)(s.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjQ="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Create Many Todo Items - 3",\n            "completed": false,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjM="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjQ="\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("p",null,"In this example we sort by completed and title."),(0,l.kt)(o.Z,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"graphql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(\n    sorting: [\n      { field: completed, direction: ASC }\n      { field: title, direction: DESC }\n    ]\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),(0,l.kt)(s.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjQ="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Create Many Todo Items - 3",\n            "completed": false,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjM="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjQ="\n        }\n      ]\n    }\n  }\n}\n')))))}h.isMDXComponent=!0}}]);